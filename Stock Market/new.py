from nsetools import Nse
import pandas as pd
codes=['3MINDIA', 'ABB', 'ACC', 'AIAENG', 'APLAPOLLO', 'AUBANK', 'AARTIIND', 'AAVAS', 'ABBOTINDIA', 'ADANIGAS', 'ADANIGREEN', 'ADANIPORTS', 'ADANIPOWER', 'ADANITRANS', 'ABCAPITAL', 'ABFRL', 'ADVENZYMES', 'AEGISCHEM', 'AFFLE', 'AJANTPHARM', 'AKZOINDIA', 'APLLTD', 'ALKEM', 'ALKYLAMINE', 'ALLCARGO', 'AMARAJABAT', 'AMBER', 'AMBUJACEM', 'APOLLOHOSP', 'APOLLOTYRE', 'ARVINDFASN', 'ASAHIINDIA', 'ASHOKLEY', 'ASHOKA', 'ASIANPAINT', 'ASTERDM', 'ASTRAZEN', 'ASTRAL', 'ATUL', 'AUROPHARMA', 'AVANTIFEED', 'DMART', 'AXISBANK', 'BASF', 'BEML', 'BSE', 'BAJAJ-AUTO', 'BAJAJCON', 'BAJAJELEC', 'BAJFINANCE', 'BAJAJFINSV', 'BAJAJHLDNG', 'BALKRISIND', 'BALMLAWRIE', 'BALRAMCHIN', 'BANDHANBNK', 'BANKBARODA', 'BANKINDIA', 'MAHABANK', 'BATAINDIA', 'BAYERCROP', 'BERGEPAINT', 'BDL', 'BEL', 'BHARATFORG', 'BHEL', 'BPCL', 'BHARATRAS', 'BHARTIARTL', 'INFRATEL', 'BIOCON', 'BIRLACORPN', 'BSOFT', 'BLISSGVS', 'BLUEDART', 'BLUESTARCO', 'BBTC', 'BOMDYEING', 'BOSCHLTD', 'BRIGADE', 'BRITANNIA', 'CARERATING', 'CCL', 'CESC', 'CRISIL', 'CSBBANK', 'CADILAHC', 'CANFINHOME', 'CANBK', 'CAPLIPOINT', 'CGCL', 'CARBORUNIV', 'CASTROLIND', 'CEATLTD', 'CENTRALBK', 'CDSL', 'CENTURYPLY', 'CENTURYTEX', 'CERA', 'CHAMBLFERT', 'CHENNPETRO', 'CHOLAHLDNG', 'CHOLAFIN', 'CIPLA', 'CUB', 'COALINDIA', 'COCHINSHIP', 'COFORGE', 'COLPAL', 'CONCOR', 'COROMANDEL', 'CREDITACC', 'CROMPTON', 'CUMMINSIND', 'CYIENT', 'DBCORP', 'DCBBANK', 'DCMSHRIRAM', 'DLF', 'DABUR', 'DALBHARAT', 'DEEPAKNTR', 'DELTACORP', 'DHANUKA', 'DBL', 'DISHTV', 'DCAL', 'DIVISLAB', 'DIXON', 'LALPATHLAB', 'DRREDDY', 'EIDPARRY', 'EIHOTEL', 'ESABINDIA', 'EDELWEISS', 'EICHERMOT', 'ELGIEQUIP', 'EMAMILTD', 'ENDURANCE', 'ENGINERSIN', 'EQUITAS', 'ERIS', 'ESCORTS', 'ESSELPACK', 'EXIDEIND', 'FDC', 'FEDERALBNK', 'FINEORG', 'FINCABLES', 'FINPIPE', 'FSL', 'FORTIS', 'FCONSUMER', 'FRETAIL', 'GAIL', 'GEPIL', 'GET&D', 'GHCL', 'GMMPFAUDLR', 'GMRINFRA', 'GALAXYSURF', 'GRSE', 'GARFIBRES', 'GICRE', 'GILLETTE', 'GLAXO', 'GLENMARK', 'GODFRYPHLP', 'GODREJAGRO', 'GODREJCP', 'GODREJIND', 'GODREJPROP', 'GRANULES', 'GRAPHITE', 'GRASIM', 'GESHIP', 'GREAVESCOT', 'GRINDWELL', 'GUJALKALI', 'FLUOROCHEM', 'GUJGASLTD', 'GMDCLTD', 'GNFC', 'GPPL', 'GSFC', 'GSPL', 'GULFOILLUB', 'HEG', 'HCLTECH', 'HDFCAMC', 'HDFCBANK', 'HDFCLIFE', 'HFCL', 'HATHWAY', 'HATSUN', 'HAVELLS', 'HEIDELBERG', 'HERITGFOOD', 'HEROMOTOCO', 'HEXAWARE', 'HSCL', 'HIMATSEIDE', 'HINDALCO', 'HAL', 'HINDCOPPER', 'HINDPETRO', 'HINDUNILVR', 'HINDZINC', 'HONAUT', 'HUDCO', 'HDFC', 'ICICIBANK', 'ICICIGI', 'ICICIPRULI', 'ISEC', 'ICRA', 'IDBI', 'IDFCFIRSTB', 'IDFC', 'IFBIND', 'IFCI', 'IIFL', 'IIFLWAM', 'IRB', 'IRCON', 'ITC', 'ITI', 'INDIACEM', 'ITDC', 'IBULHSGFIN', 'IBREALEST', 'IBVENTURES', 'INDIAMART', 'INDIANB', 'IEX', 'INDHOTEL', 'IOC', 'IOB', 'IRCTC', 'INDOSTAR', 'INDOCO', 'IGL', 'INDUSINDBK', 'INFIBEAM', 'NAUKRI', 'INFY', 'INGERRAND', 'INOXLEISUR', 'INTELLECT', 'INDIGO', 'IPCALAB', 'JBCHEPHARM', 'JKCEMENT', 'JKLAKSHMI', 'JKPAPER', 'JKTYRE', 'JMFINANCIL', 'JSWENERGY', 'JSWSTEEL', 'JAGRAN', 'JAICORPLTD', 'J&KBANK', 'JAMNAAUTO', 'JINDALSAW', 'JSLHISAR', 'JSL', 'JINDALSTEL', 'JCHAC', 'JUBLFOOD', 'JUBILANT', 'JUSTDIAL', 'JYOTHYLAB', 'KPRMILL', 'KEI', 'KNRCON', 'KPITTECH', 'KRBL', 'KSB', 'KAJARIACER', 'KALPATPOWR', 'KANSAINER', 'KTKBANK', 'KARURVYSYA', 'KSCL', 'KEC', 'KOLTEPATIL', 'KOTAKBANK', 'L&TFH', 'LTTS', 'LICHSGFIN', 'LAOPALA', 'LAXMIMACH', 'LTI', 'LT', 'LAURUSLABS', 'LEMONTREE', 'LINDEINDIA', 'LUPIN', 'LUXIND', 'MASFIN', 'MMTC', 'MOIL', 'MRF', 'MGL', 'MAHSCOOTER', 'MAHSEAMLES', 'M&MFIN', 'M&M', 'MAHINDCIE', 'MHRIL', 'MAHLOG', 'MANAPPURAM', 'MRPL', 'MARICO', 'MARUTI', 'MFSL', 'METROPOLIS', 'MINDTREE', 'MINDACORP', 'MINDAIND', 'MIDHANI', 'MOTHERSUMI', 'MOTILALOFS', 'MPHASIS', 'MCX', 'MUTHOOTFIN', 'NATCOPHARM', 'NBCC', 'NCC', 'NESCO', 'NHPC', 'NLCINDIA', 'NMDC', 'NTPC', 'NH', 'NATIONALUM', 'NFL', 'NBVENTURES', 'NAVINFLUOR', 'NESTLEIND', 'NILKAMAL', 'NAM-INDIA', 'OBEROIRLTY', 'ONGC', 'OIL', 'OMAXE', 'OFSS', 'ORIENTCEM', 'ORIENTELEC', 'ORIENTREF', 'PIIND', 'PNBHOUSING', 'PNCINFRA', 'PTC', 'PVR', 'PAGEIND', 'PERSISTENT', 'PETRONET', 'PFIZER', 'PHILIPCARB', 'PHOENIXLTD', 'PIDILITIND', 'PEL', 'POLYMED', 'POLYCAB', 'PFC', 'POWERGRID', 'PRAJIND', 'PRESTIGE', 'PRSMJOHNSN', 'PGHL', 'PGHH', 'PNB', 'QUESS', 'RBLBANK', 'RECLTD', 'RITES', 'RADICO', 'RVNL', 'RAIN', 'RAJESHEXPO', 'RALLIS', 'RCF', 'RATNAMANI', 'RAYMOND', 'REDINGTON', 'RELAXO', 'RELIANCE', 'REPCOHOME', 'SBICARD', 'SBILIFE', 'SJVN', 'SKFINDIA', 'SRF', 'SADBHAV', 'SANOFI', 'SCHAEFFLER', 'SCHNEIDER', 'SIS', 'SEQUENT', 'SFL', 'SCI', 'SHOPERSTOP', 'SHREECEM', 'RENUKA', 'SHRIRAMCIT', 'SRTRANSFIN', 'SIEMENS', 'SOBHA', 'SOLARINDS', 'SONATSOFTW', 'SOUTHBANK', 'SPANDANA', 'SPICEJET', 'STARCEMENT', 'SBIN', 'SAIL', 'SWSOLAR', 'STRTECH', 'STAR', 'SUDARSCHEM', 'SUMICHEM', 'SPARC', 'SUNPHARMA', 'SUNTV', 'SUNDARMFIN', 'SUNDRMFAST', 'SUNTECK', 'SUPRAJIT', 'SUPREMEIND', 'SUZLON', 'SWANENERGY', 'SYMPHONY', 'SYNGENE', 'TCIEXP', 'TCNSBRANDS', 'TTKPRESTIG', 'TVTODAY', 'TV18BRDCST', 'TVSMOTOR', 'TAKE', 'TASTYBITE', 'TATACOMM', 'TCS', 'TATACONSUM', 'TATAELXSI', 'TATAINVEST', 'TATAMTRDVR', 'TATAMOTORS', 'TATAPOWER', 'TATASTLBSL', 'TATASTEEL', 'TEAMLEASE', 'TECHM', 'NIACL', 'RAMCOCEM', 'THERMAX', 'THYROCARE', 'TIMETECHNO', 'TIMKEN', 'TITAN', 'TORNTPHARM', 'TORNTPOWER', 'TRENT', 'TRIDENT', 'TIINDIA', 'UCOBANK', 'UFLEX', 'UPL', 'UJJIVAN', 'UJJIVANSFB', 'ULTRACEMCO', 'UNIONBANK', 'UBL', 'MCDOWELL-N', 'VGUARD', 'VMART', 'VIPIND', 'VRLLOG', 'VSTIND', 'VAIBHAVGBL', 'VAKRANGEE', 'VTL', 'VARROC', 'VBL', 'VENKEYS', 'VESUVIUS', 'VINATIORGA', 'IDEA', 'VOLTAS', 'WABCOINDIA', 'WELCORP', 'WELSPUNIND', 'WESTLIFE', 'WHIRLPOOL', 'WIPRO', 'WOCKPHARMA', 'ZEEL', 'ZENSARTECH', 'ZYDUSWELL', 'ECLERX']
avg_20,max_vol_20,avg_55,max_vol_55,avg_200,max_vol_200,watchlist={},{},{},{},{},{},{}
#Historical Data
avg_20=pd.read_csv('avg_20.csv',index_col=0, header=None, squeeze=True).to_dict()
avg_55=pd.read_csv('avg_55.csv',index_col=0, header=None, squeeze=True).to_dict()
avg_200=pd.read_csv('avg_200.csv',index_col=0, header=None, squeeze=True).to_dict()
max_vol_20=pd.read_csv('max_vol_20.csv',index_col=0, header=None, squeeze=True).to_dict()
max_vol_55=pd.read_csv('max_vol_55.csv',index_col=0, header=None, squeeze=True).to_dict()
max_vol_200=pd.read_csv('max_vol_200.csv',index_col=0, header=None, squeeze=True).to_dict()
while True:
    nse=Nse()
    for i in codes:
        live_data=nse.get_quote(i)
        try:
            if live_data["totalTradedVolume"]>avg_20[i] and live_data["totalTradedVolume"]>max_vol_20[i] and live_data['dayHigh']==live_data['high52'] or live_data['dayLow']==live_data['low52']:
                watchlist[i]=['No','No','Yes',live_data["lastPrice"],live_data['dayHigh'],live_data['dayLow'],live_data["high52"],live_data['low52'],live_data['deliveryToTradedQuantity']/100,live_data['pChange']/100]
            if live_data["totalTradedVolume"]>avg_55[i] and live_data["totalTradedVolume"]>max_vol_55[i] and live_data['dayHigh']==live_data['high52'] or live_data['dayLow']==live_data['low52']:
                if i in watchlist:
                    watchlist[i].pop(1)
                    watchlist[i].insert(1,'Yes')
                else:
                    watchlist[i]=['No','Yes','No',live_data["lastPrice"],live_data['dayHigh'],live_data['dayLow'],live_data["high52"],live_data['low52'],live_data['deliveryToTradedQuantity']/100,live_data['pChange']/100]
            if live_data["totalTradedVolume"]>avg_200[i] and live_data["totalTradedVolume"]>max_vol_200[i] and live_data['dayHigh']==live_data['high52'] or live_data['dayLow']==live_data['low52']:
                if i in watchlist:
                    watchlist[i].pop(0)
                    watchlist[i].insert(0,'Yes')
                else:
                    watchlist[i]=['Yes','No','No',live_data["lastPrice"],live_data['dayHigh'],live_data['dayLow'],live_data["high52"],live_data['low52'],live_data['deliveryToTradedQuantity']/100,live_data['pChange']/100]
        except:
            pass
    print('New')
    df=pd.DataFrame.from_dict(data=watchlist,orient='index',columns=['200 Day','55 Day','20 Day','LTP','Day High','Day Low','52 week high','52 week low','Delivery %','Change %'])
    df.to_csv('watchlist.csv')